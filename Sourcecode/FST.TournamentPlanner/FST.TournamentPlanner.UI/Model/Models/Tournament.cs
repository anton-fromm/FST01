// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace FST.TournamentPlanner.UI.Model.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Tournament
    {
        /// <summary>
        /// Initializes a new instance of the Tournament class.
        /// </summary>
        public Tournament() { }

        /// <summary>
        /// Initializes a new instance of the Tournament class.
        /// </summary>
        public Tournament(int? id = default(int?), string name = default(string), string description = default(string), DateTime? startTime = default(DateTime?), int? matchDuration = default(int?), int? teamCount = default(int?), int? state = default(int?), IList<PlayArea> playAreas = default(IList<PlayArea>), IList<Team> teams = default(IList<Team>), Match finalMatch = default(Match))
        {
            Id = id;
            Name = name;
            Description = description;
            StartTime = startTime;
            MatchDuration = matchDuration;
            TeamCount = teamCount;
            State = state;
            PlayAreas = playAreas;
            Teams = teams;
            FinalMatch = finalMatch;
        }

        /// <summary>
        /// Id of the tournament
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; private set; }

        /// <summary>
        /// Name of the tournament
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Description of the tournament
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; private set; }

        /// <summary>
        /// Start day and time of the tournament
        /// 
        /// Only valid while the tournament is in
        /// Created-StateFST.TournamentPlanner.DB.Models.TournamentState
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public DateTime? StartTime { get; private set; }

        /// <summary>
        /// Duration a single match within the tournament
        /// 
        /// Only valid while the tournament is in
        /// Created-StateFST.TournamentPlanner.DB.Models.TournamentState
        /// </summary>
        [JsonProperty(PropertyName = "matchDuration")]
        public int? MatchDuration { get; private set; }

        /// <summary>
        /// Number of teams in the tournament.
        /// This number must be expressable as potence of basis 2
        /// 
        /// Only valid while the tournament is in
        /// Created-StateFST.TournamentPlanner.DB.Models.TournamentState
        /// </summary>
        [JsonProperty(PropertyName = "teamCount")]
        public int? TeamCount { get; private set; }

        /// <summary>
        /// Current state of the tournament
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public int? State { get; private set; }

        /// <summary>
        /// List of play areas within this tournament
        /// </summary>
        [JsonProperty(PropertyName = "playAreas")]
        public IList<PlayArea> PlayAreas { get; private set; }

        /// <summary>
        /// List of teams
        /// </summary>
        [JsonProperty(PropertyName = "teams")]
        public IList<Team> Teams { get; private set; }

        /// <summary>
        /// List of matches
        /// </summary>
        [JsonProperty(PropertyName = "finalMatch")]
        public Match FinalMatch { get; private set; }

    }
}
